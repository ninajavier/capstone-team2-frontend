{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Auth } from \"./components/uth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport { getDocs, collection, addDoc, deleteDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movieList, setMovieList] = useState([]);\n\n  // New Movie States\n  const [newMovieTitle, setNewMovieTitle] = useState(\"\");\n  const [newReleaseDate, setNewReleaseDate] = useState(0);\n  const [isNewMovieOscar, setIsNewMovieOscar] = useState(false);\n\n  // Update Title State\n  const [updatedTitle, setUpdatedTitle] = useState(\"\");\n\n  // File Upload State\n  const [fileUpload, setFileUpload] = useState(null);\n  const moviesCollectionRef = collection(db, \"movies\");\n  const getMovieList = async () => {\n    try {\n      const data = await getDocs(moviesCollectionRef);\n      const filteredData = data.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setMovieList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    getMovieList();\n  }, []);\n  const onSubmitMovie = async () => {\n    try {\n      var _auth$currentUser;\n      await addDoc(moviesCollectionRef, {\n        title: newMovieTitle,\n        releaseDate: newReleaseDate,\n        receivedAnOscar: isNewMovieOscar,\n        userId: auth === null || auth === void 0 ? void 0 : (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid\n      });\n      getMovieList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const deleteMovie = async id => {\n    const movieDoc = doc(db, \"movies\", id);\n    await deleteDoc(movieDoc);\n  };\n  const updateMovieTitle = async id => {\n    const movieDoc = doc(db, \"movies\", id);\n    await updateDoc(movieDoc, {\n      title: updatedTitle\n    });\n  };\n  const uploadFile = async () => {\n    if (!fileUpload) return;\n    const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`);\n    try {\n      await uploadBytes(filesFolderRef, fileUpload);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Movie title...\",\n        onChange: e => setNewMovieTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Release Date...\",\n        type: \"number\",\n        onChange: e => setNewReleaseDate(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isNewMovieOscar,\n        onChange: e => setIsNewMovieOscar(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Received an Oscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmitMovie,\n        children: \" Submit Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movieList.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: movie.receivedAnOscar ? \"green\" : \"red\"\n          },\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Date: \", movie.releaseDate, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteMovie(movie.id),\n          children: \" Delete Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"new title...\",\n          onChange: e => setUpdatedTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateMovieTitle(movie.id),\n          children: [\" \", \"Update Title\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFileUpload(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        children: \" Upload File \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mq5GnoOB6hDvmTaWeE5Tnuruatc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Auth","db","auth","storage","getDocs","collection","addDoc","deleteDoc","updateDoc","doc","ref","uploadBytes","jsxDEV","_jsxDEV","App","_s","movieList","setMovieList","newMovieTitle","setNewMovieTitle","newReleaseDate","setNewReleaseDate","isNewMovieOscar","setIsNewMovieOscar","updatedTitle","setUpdatedTitle","fileUpload","setFileUpload","moviesCollectionRef","getMovieList","data","filteredData","docs","map","id","err","console","error","onSubmitMovie","_auth$currentUser","title","releaseDate","receivedAnOscar","userId","currentUser","uid","deleteMovie","movieDoc","updateMovieTitle","uploadFile","filesFolderRef","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","type","Number","checked","onClick","movie","style","color","files","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Auth } from \"./components/uth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport {\n  getDocs,\n  collection,\n  addDoc,\n  deleteDoc,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n\n  // New Movie States\n  const [newMovieTitle, setNewMovieTitle] = useState(\"\");\n  const [newReleaseDate, setNewReleaseDate] = useState(0);\n  const [isNewMovieOscar, setIsNewMovieOscar] = useState(false);\n\n  // Update Title State\n  const [updatedTitle, setUpdatedTitle] = useState(\"\");\n\n  // File Upload State\n  const [fileUpload, setFileUpload] = useState(null);\n\n  const moviesCollectionRef = collection(db, \"movies\");\n\n  const getMovieList = async () => {\n    try {\n      const data = await getDocs(moviesCollectionRef);\n      const filteredData = data.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setMovieList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getMovieList();\n  }, []);\n\n  const onSubmitMovie = async () => {\n    try {\n      await addDoc(moviesCollectionRef, {\n        title: newMovieTitle,\n        releaseDate: newReleaseDate,\n        receivedAnOscar: isNewMovieOscar,\n        userId: auth?.currentUser?.uid,\n      });\n      getMovieList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deleteMovie = async (id) => {\n    const movieDoc = doc(db, \"movies\", id);\n    await deleteDoc(movieDoc);\n  };\n\n  const updateMovieTitle = async (id) => {\n    const movieDoc = doc(db, \"movies\", id);\n    await updateDoc(movieDoc, { title: updatedTitle });\n  };\n\n  const uploadFile = async () => {\n    if (!fileUpload) return;\n    const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`);\n    try {\n      await uploadBytes(filesFolderRef, fileUpload);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Auth />\n\n      <div>\n        <input\n          placeholder=\"Movie title...\"\n          onChange={(e) => setNewMovieTitle(e.target.value)}\n        />\n        <input\n          placeholder=\"Release Date...\"\n          type=\"number\"\n          onChange={(e) => setNewReleaseDate(Number(e.target.value))}\n        />\n        <input\n          type=\"checkbox\"\n          checked={isNewMovieOscar}\n          onChange={(e) => setIsNewMovieOscar(e.target.checked)}\n        />\n        <label> Received an Oscar</label>\n        <button onClick={onSubmitMovie}> Submit Movie</button>\n      </div>\n      <div>\n        {movieList.map((movie) => (\n          <div>\n            <h1 style={{ color: movie.receivedAnOscar ? \"green\" : \"red\" }}>\n              {movie.title}\n            </h1>\n            <p> Date: {movie.releaseDate} </p>\n\n            <button onClick={() => deleteMovie(movie.id)}> Delete Movie</button>\n\n            <input\n              placeholder=\"new title...\"\n              onChange={(e) => setUpdatedTitle(e.target.value)}\n            />\n            <button onClick={() => updateMovieTitle(movie.id)}>\n              {\" \"}\n              Update Title\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <input type=\"file\" onChange={(e) => setFileUpload(e.target.files[0])} />\n        <button onClick={uploadFile}> Upload File </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}