{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Auth } from \"./components/auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport { getDocs, collection, addDoc, deleteDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [progradeList, setProgradeList] = useState([]);\n\n  // New Prograde States\n  const [newProgradeContent, setNewProgradeContent] = useState(\"\");\n  const [isNewProgradeImportant, setIsNewProgradeImportant] = useState(false);\n\n  // Update Prograde Content State\n  const [updatedProgradeContent, setUpdatedProgradeContent] = useState(\"\");\n\n  // File Upload State\n  const [fileUpload, setFileUpload] = useState(null);\n  const progradesCollectionRef = collection(db, \"progrades\");\n  const getProgradeList = async () => {\n    try {\n      const data = await getDocs(progradesCollectionRef);\n      const filteredData = data.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setProgradeList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    getProgradeList();\n  }, []);\n  const onSubmitPrograde = async () => {\n    try {\n      var _auth$currentUser;\n      await addDoc(progradesCollectionRef, {\n        content: newProgradeContent,\n        important: isNewProgradeImportant,\n        userId: auth === null || auth === void 0 ? void 0 : (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid\n      });\n      getProgradeList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const deletePrograde = async id => {\n    const progradeDoc = doc(db, \"progrades\", id);\n    await deleteDoc(progradeDoc);\n  };\n  const updateProgradeContent = async id => {\n    const progradeDoc = doc(db, \"progrades\", id);\n    await updateDoc(progradeDoc, {\n      content: updatedProgradeContent\n    });\n  };\n  const uploadFile = async () => {\n    if (!fileUpload) return;\n    const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`);\n    try {\n      await uploadBytes(filesFolderRef, fileUpload);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Prograde content...\",\n        onChange: e => setNewProgradeContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isNewProgradeImportant,\n        onChange: e => setIsNewProgradeImportant(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Important\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmitPrograde,\n        children: \" Submit Prograde\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: progradeList.map(prograde => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: prograde.important ? \"red\" : \"green\"\n          },\n          children: prograde.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePrograde(prograde.id),\n          children: \"Delete Prograde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"New content...\",\n          onChange: e => setUpdatedProgradeContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateProgradeContent(prograde.id),\n          children: \"Update Prograde Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFileUpload(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        children: \" Upload File \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VAzGD9/VAfuLOYjefe+lXXkeQtM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Auth","db","auth","storage","getDocs","collection","addDoc","deleteDoc","updateDoc","doc","ref","uploadBytes","jsxDEV","_jsxDEV","App","_s","progradeList","setProgradeList","newProgradeContent","setNewProgradeContent","isNewProgradeImportant","setIsNewProgradeImportant","updatedProgradeContent","setUpdatedProgradeContent","fileUpload","setFileUpload","progradesCollectionRef","getProgradeList","data","filteredData","docs","map","id","err","console","error","onSubmitPrograde","_auth$currentUser","content","important","userId","currentUser","uid","deletePrograde","progradeDoc","updateProgradeContent","uploadFile","filesFolderRef","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","type","checked","onClick","prograde","style","color","files","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Auth } from \"./components/auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport {\n  getDocs,\n  collection,\n  addDoc,\n  deleteDoc,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\n\nfunction App() {\n  const [progradeList, setProgradeList] = useState([]);\n\n  // New Prograde States\n  const [newProgradeContent, setNewProgradeContent] = useState(\"\");\n  const [isNewProgradeImportant, setIsNewProgradeImportant] = useState(false);\n\n  // Update Prograde Content State\n  const [updatedProgradeContent, setUpdatedProgradeContent] = useState(\"\");\n\n  // File Upload State\n  const [fileUpload, setFileUpload] = useState(null);\n\n  const progradesCollectionRef = collection(db, \"progrades\");\n\n  const getProgradeList = async () => {\n    try {\n      const data = await getDocs(progradesCollectionRef);\n      const filteredData = data.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setProgradeList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getProgradeList();\n  }, []);\n\n  const onSubmitPrograde = async () => {\n    try {\n      await addDoc(progradesCollectionRef, {\n        content: newProgradeContent,\n        important: isNewProgradeImportant,\n        userId: auth?.currentUser?.uid,\n      });\n      getProgradeList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deletePrograde = async (id) => {\n    const progradeDoc = doc(db, \"progrades\", id);\n    await deleteDoc(progradeDoc);\n  };\n\n  const updateProgradeContent = async (id) => {\n    const progradeDoc = doc(db, \"progrades\", id);\n    await updateDoc(progradeDoc, { content: updatedProgradeContent });\n  };\n\n  const uploadFile = async () => {\n    if (!fileUpload) return;\n    const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`);\n    try {\n      await uploadBytes(filesFolderRef, fileUpload);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Auth />\n\n      <div>\n        <input\n          placeholder=\"Prograde content...\"\n          onChange={(e) => setNewProgradeContent(e.target.value)}\n        />\n        <input\n          type=\"checkbox\"\n          checked={isNewProgradeImportant}\n          onChange={(e) => setIsNewProgradeImportant(e.target.checked)}\n        />\n        <label> Important</label>\n        <button onClick={onSubmitPrograde}> Submit Prograde</button>\n      </div>\n      <div>\n        {progradeList.map((prograde) => (\n          <div>\n            <h1 style={{ color: prograde.important ? \"red\" : \"green\" }}>\n              {prograde.content}\n            </h1>\n\n            <button onClick={() => deletePrograde(prograde.id)}>\n              Delete Prograde\n            </button>\n\n            <input\n              placeholder=\"New content...\"\n              onChange={(e) => setUpdatedProgradeContent(e.target.value)}\n            />\n            <button onClick={() => updateProgradeContent(prograde.id)}>\n              Update Prograde Content\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <input type=\"file\" onChange={(e) => setFileUpload(e.target.files[0])} />\n        <button onClick={uploadFile}> Upload File </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}