{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/Components/UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { auth } from '../config/firebase';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [userData, setUserData] = useState(auth.currentUser || {});\n  const [userComments, setUserComments] = useState([]);\n  const [userThreads, setUserThreads] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserDataFromBackend = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          const response = await fetch(`/api/users/${user.uid}`);\n          const data = await response.json();\n\n          // Set user data\n          if (data.status === 200) {\n            setUserData(data.data); // Updating to data.data to correctly access the user data based on your backend structure\n          } else {\n            console.error('Error fetching user data:', data.error);\n          }\n          setIsLoading(false);\n        } catch (error) {\n          console.error(\"Error fetching user data from backend:\", error);\n        }\n      }\n    };\n    fetchUserDataFromBackend();\n  }, []);\n  const handleUpdateProfile = async () => {\n    const user = auth.currentUser;\n    if (user) {\n      try {\n        const response = await fetch(`/api/users/${user.uid}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userData)\n        });\n        if (response.ok) {\n          alert('Profile updated successfully!');\n        } else {\n          console.error('Error updating profile:', await response.text());\n        }\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UserProfile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: userData.profilePhoto || 'defaultProfilePhotoURL',\n      alt: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: userData.name || '',\n          onChange: e => setUserData(prevState => ({\n            ...prevState,\n            name: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: userData.email || '',\n          onChange: e => setUserData(prevState => ({\n            ...prevState,\n            email: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleUpdateProfile,\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading comments and threads...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Threads:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userThreads.map((thread, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: thread.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"W6s2nH3sFiTkqb6bHsWzSOZoNZY=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","auth","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","userData","setUserData","currentUser","userComments","setUserComments","userThreads","setUserThreads","isLoading","setIsLoading","fetchUserDataFromBackend","user","response","fetch","uid","data","json","status","console","error","handleUpdateProfile","method","headers","body","JSON","stringify","ok","alert","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","profilePhoto","alt","Group","controlId","Label","Control","type","value","name","onChange","e","prevState","target","email","variant","onClick","map","comment","index","thread","title","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/Components/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth } from '../config/firebase'; \nimport { Button, Form } from 'react-bootstrap';\n\nconst UserProfile = () => {\n  const [userData, setUserData] = useState(auth.currentUser || {});\n  const [userComments, setUserComments] = useState([]);\n  const [userThreads, setUserThreads] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUserDataFromBackend = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          const response = await fetch(`/api/users/${user.uid}`);\n          const data = await response.json();\n\n          // Set user data\n          if (data.status === 200) {\n            setUserData(data.data); // Updating to data.data to correctly access the user data based on your backend structure\n          } else {\n            console.error('Error fetching user data:', data.error);\n          }\n\n          setIsLoading(false);\n        } catch (error) {\n          console.error(\"Error fetching user data from backend:\", error);\n        }\n      }\n    };\n\n    fetchUserDataFromBackend();\n  }, []);\n\n  const handleUpdateProfile = async () => {\n    const user = auth.currentUser;\n    if (user) {\n      try {\n        const response = await fetch(`/api/users/${user.uid}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userData)\n        });\n        \n        if (response.ok) {\n          alert('Profile updated successfully!');\n        } else {\n          console.error('Error updating profile:', await response.text());\n        }\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n      }\n    }\n  }\n\n  return (\n    <div className=\"UserProfile\">\n      <h1>Your Profile</h1>\n      <img src={userData.profilePhoto || 'defaultProfilePhotoURL'} alt=\"Profile\" />\n\n      <Form>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={userData.name || ''}\n            onChange={(e) => setUserData(prevState => ({ ...prevState, name: e.target.value }))}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={userData.email || ''}\n            onChange={(e) => setUserData(prevState => ({ ...prevState, email: e.target.value }))}\n          />\n        </Form.Group>\n\n        {/* Add more fields as necessary, like profile photo URL, etc. */}\n\n        <Button variant=\"primary\" onClick={handleUpdateProfile}>\n          Update Profile\n        </Button>\n      </Form>\n\n      {isLoading ? (\n        <div>Loading comments and threads...</div>\n      ) : (\n        <>\n          <h3>Your Comments:</h3>\n          <ul>\n            {userComments.map((comment, index) => (\n              <li key={index}>{comment.text}</li>\n            ))}\n          </ul>\n\n          <h3>Your Threads:</h3>\n          <ul>\n            {userThreads.map((thread, index) => (\n              <li key={index}>{thread.title}</li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}