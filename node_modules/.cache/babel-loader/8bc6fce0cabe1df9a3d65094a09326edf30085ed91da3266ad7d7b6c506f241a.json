{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Auth } from \"./Components/Auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport { getDocs, collection, addDoc, deleteDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [commentList, setCommentList] = useState([]);\n\n  // New Comment States\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const [isNewCommentImportant, setIsNewCommentImportant] = useState(false);\n\n  // Update Comment Content State\n  const [updatedCommentContent, setUpdatedCommentContent] = useState(\"\");\n\n  // File Upload State\n  const [fileUpload, setFileUpload] = useState(null);\n  const commentsCollectionRef = collection(db, \"comments\");\n  const getCommentList = async () => {\n    try {\n      const data = await getDocs(commentsCollectionRef);\n      const filteredData = data.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setCommentList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    getCommentList();\n  }, []);\n  const onSubmitComment = async () => {\n    try {\n      var _auth$currentUser;\n      await addDoc(commentsCollectionRef, {\n        content: newCommentContent,\n        important: isNewCommentImportant,\n        userId: auth === null || auth === void 0 ? void 0 : (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid\n      });\n      getCommentList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const deleteComment = async id => {\n    const commentDoc = doc(db, \"comments\", id);\n    await deleteDoc(commentDoc);\n  };\n  const updateCommentContent = async id => {\n    const commentDoc = doc(db, \"comments\", id);\n    await updateDoc(commentDoc, {\n      content: updatedCommentContent\n    });\n  };\n  const uploadFile = async () => {\n    if (!fileUpload) return;\n    const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`);\n    try {\n      await uploadBytes(filesFolderRef, fileUpload);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Comment content...\",\n        onChange: e => setNewCommentContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isNewCommentImportant,\n        onChange: e => setIsNewCommentImportant(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Important\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmitComment,\n        children: \" Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: commentList.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: comment.important ? \"red\" : \"green\"\n          },\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteComment(comment.id),\n          children: \"Delete Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"New content...\",\n          onChange: e => setUpdatedCommentContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCommentContent(comment.id),\n          children: \"Update Comment Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFileUpload(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        children: \" Upload File \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tpoEMBKtOGQR+6Bs5Cgfbrd5frw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Auth","db","auth","storage","getDocs","collection","addDoc","deleteDoc","updateDoc","doc","ref","uploadBytes","jsxDEV","_jsxDEV","App","_s","commentList","setCommentList","newCommentContent","setNewCommentContent","isNewCommentImportant","setIsNewCommentImportant","updatedCommentContent","setUpdatedCommentContent","fileUpload","setFileUpload","commentsCollectionRef","getCommentList","data","filteredData","docs","map","id","err","console","error","onSubmitComment","_auth$currentUser","content","important","userId","currentUser","uid","deleteComment","commentDoc","updateCommentContent","uploadFile","filesFolderRef","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","type","checked","onClick","comment","style","color","files","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Auth } from \"./Components/Auth\";\nimport { db, auth, storage } from \"./config/firebase\";\n\nimport {\n  getDocs,\n  collection,\n  addDoc,\n  deleteDoc,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\n\nfunction App() {\n  const [commentList, setCommentList] = useState([]);\n\n  // New Comment States\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const [isNewCommentImportant, setIsNewCommentImportant] = useState(false);\n\n  // Update Comment Content State\n  const [updatedCommentContent, setUpdatedCommentContent] = useState(\"\");\n\n  // File Upload State\n  const [fileUpload, setFileUpload] = useState(null);\n\n  const commentsCollectionRef = collection(db, \"comments\");\n\n  const getCommentList = async () => {\n    try {\n      const data = await getDocs(commentsCollectionRef);\n      const filteredData = data.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setCommentList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getCommentList();\n  }, []);\n\n  const onSubmitComment = async () => {\n    try {\n      await addDoc(commentsCollectionRef, {\n        content: newCommentContent,\n        important: isNewCommentImportant,\n        userId: auth?.currentUser?.uid,\n      });\n      getCommentList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deleteComment = async (id) => {\n    const commentDoc = doc(db, \"comments\", id);\n    await deleteDoc(commentDoc);\n  };\n\n  const updateCommentContent = async (id) => {\n    const commentDoc = doc(db, \"comments\", id);\n    await updateDoc(commentDoc, { content: updatedCommentContent });\n  };\n\n  const uploadFile = async () => {\n    if (!fileUpload) return;\n    const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`);\n    try {\n      await uploadBytes(filesFolderRef, fileUpload);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Auth />\n\n      <div>\n        <input\n          placeholder=\"Comment content...\"\n          onChange={(e) => setNewCommentContent(e.target.value)}\n        />\n        <input\n          type=\"checkbox\"\n          checked={isNewCommentImportant}\n          onChange={(e) => setIsNewCommentImportant(e.target.checked)}\n        />\n        <label> Important</label>\n        <button onClick={onSubmitComment}> Submit Comment</button>\n      </div>\n      <div>\n        {commentList.map((comment) => (\n          <div>\n            <h1 style={{ color: comment.important ? \"red\" : \"green\" }}>\n              {comment.content}\n            </h1>\n\n            <button onClick={() => deleteComment(comment.id)}>\n              Delete Comment\n            </button>\n\n            <input\n              placeholder=\"New content...\"\n              onChange={(e) => setUpdatedCommentContent(e.target.value)}\n            />\n            <button onClick={() => updateCommentContent(comment.id)}>\n              Update Comment Content\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <input type=\"file\" onChange={(e) => setFileUpload(e.target.files[0])} />\n        <button onClick={uploadFile}> Upload File </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}