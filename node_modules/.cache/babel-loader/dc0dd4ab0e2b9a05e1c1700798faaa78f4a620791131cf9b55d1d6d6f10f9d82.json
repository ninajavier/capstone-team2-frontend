{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from './Components/Navbar';\nimport CommentsList from './Components/CommentsList';\nimport \"./App.css\";\nimport { Auth } from \"./Components/Auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport { getDocs, collection, addDoc, deleteDoc } from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [commentList, setCommentList] = useState([]);\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(null);\n  const commentsCollectionRef = collection(db, \"comments\");\n  useEffect(() => {\n    const fetchCommentList = async () => {\n      try {\n        const data = await getDocs(commentsCollectionRef);\n        const filteredData = data.docs.map(doc => ({\n          ...doc.data(),\n          id: doc.id\n        }));\n        setCommentList(filteredData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchCommentList();\n  });\n  const onSubmitComment = async () => {\n    const user = auth.currentUser;\n    if (user) {\n      const userId = user.uid;\n      try {\n        if (newCommentContent.trim() === \"\") {\n          console.error(\"Comment content is empty.\");\n          return;\n        }\n        await addDoc(commentsCollectionRef, {\n          text: newCommentContent,\n          userId: userId,\n          threadId: \"YourThreadId\",\n          // replace with actual thread ID \n          likes: 0,\n          timestamp: new Date()\n        });\n        setCommentList(prevCommentList => [...prevCommentList, {\n          text: newCommentContent,\n          userId: userId,\n          threadId: \"YourThreadId\",\n          // replace with actual thread ID\n          likes: 0,\n          timestamp: new Date()\n        }]);\n        setNewCommentContent(\"\");\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      console.error(\"User is not authenticated.\");\n    }\n  };\n  const deleteComment = async id => {\n    const commentDoc = doc(db, \"comments\", id);\n    await deleteDoc(commentDoc);\n    setCommentList(prevCommentList => prevCommentList.filter(comment => comment.id !== id));\n  };\n  const updateCommentContent = (id, updatedContent) => {\n    setCommentList(prevCommentList => prevCommentList.map(comment => comment.id === id ? {\n      ...comment,\n      text: updatedContent\n    } : comment));\n  };\n  const uploadProfilePhoto = async () => {\n    if (!fileUpload) return;\n    const user = auth.currentUser;\n    if (user) {\n      const userId = user.uid;\n      const photoRef = ref(storage, `profilePhotos/${userId}`);\n      try {\n        await uploadBytes(photoRef, fileUpload);\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      console.error(\"User is not authenticated.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Comment content...\",\n          value: newCommentContent,\n          onChange: e => setNewCommentContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmitComment,\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/comments\",\n        children: \"View Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: commentList,\n      onDelete: deleteComment,\n      onUpdate: updateCommentContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: e => setFileUpload(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: uploadProfilePhoto,\n        children: \"Upload Profile Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hrz6tXyNPcUf9E2Wy/6co0OOuMo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","CommentsList","Auth","db","auth","storage","getDocs","collection","addDoc","deleteDoc","ref","uploadBytes","Button","Form","InputGroup","Link","jsxDEV","_jsxDEV","App","_s","commentList","setCommentList","newCommentContent","setNewCommentContent","fileUpload","setFileUpload","commentsCollectionRef","fetchCommentList","data","filteredData","docs","map","doc","id","err","console","error","onSubmitComment","user","currentUser","userId","uid","trim","text","threadId","likes","timestamp","Date","prevCommentList","deleteComment","commentDoc","filter","comment","updateCommentContent","updatedContent","uploadProfilePhoto","photoRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","value","onChange","e","target","onClick","to","comments","onDelete","onUpdate","type","files","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Navbar from './Components/Navbar';\nimport CommentsList from './Components/CommentsList';\nimport \"./App.css\";\nimport { Auth } from \"./Components/Auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport {\n  getDocs,\n  collection,\n  addDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  const [commentList, setCommentList] = useState([]);\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(null);\n\n  const commentsCollectionRef = collection(db, \"comments\");\n\n  useEffect(() => {\n    const fetchCommentList = async () => {\n      try {\n        const data = await getDocs(commentsCollectionRef);\n        const filteredData = data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }));\n        setCommentList(filteredData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchCommentList();\n  }, );\n\n  const onSubmitComment = async () => {\n    const user = auth.currentUser;\n\n    if (user) {\n      const userId = user.uid;\n      try {\n        if (newCommentContent.trim() === \"\") {\n          console.error(\"Comment content is empty.\");\n          return;\n        }\n\n        await addDoc(commentsCollectionRef, {\n          text: newCommentContent,\n          userId: userId,\n          threadId: \"YourThreadId\",  // replace with actual thread ID \n          likes: 0,\n          timestamp: new Date()\n        });\n\n        setCommentList((prevCommentList) => [\n          ...prevCommentList,\n          {\n            text: newCommentContent,\n            userId: userId,\n            threadId: \"YourThreadId\",  // replace with actual thread ID\n            likes: 0,\n            timestamp: new Date()\n          },\n        ]);\n        setNewCommentContent(\"\");\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      console.error(\"User is not authenticated.\");\n    }\n  };\n\n  const deleteComment = async (id) => {\n    const commentDoc = doc(db, \"comments\", id);\n    await deleteDoc(commentDoc);\n    setCommentList((prevCommentList) =>\n      prevCommentList.filter((comment) => comment.id !== id)\n    );\n  };\n\n  const updateCommentContent = (id, updatedContent) => {\n    setCommentList((prevCommentList) =>\n      prevCommentList.map((comment) =>\n        comment.id === id\n          ? { ...comment, text: updatedContent }\n          : comment\n      )\n    );\n  };\n\n  const uploadProfilePhoto = async () => {\n    if (!fileUpload) return;\n    const user = auth.currentUser;\n    if (user) {\n      const userId = user.uid;\n      const photoRef = ref(storage, `profilePhotos/${userId}`);\n      try {\n        await uploadBytes(photoRef, fileUpload);\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      console.error(\"User is not authenticated.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Auth />\n      <div>\n        <InputGroup className=\"mb-3\">\n          <Form.Control\n            placeholder=\"Comment content...\"\n            value={newCommentContent}\n            onChange={(e) => setNewCommentContent(e.target.value)}\n          />\n        </InputGroup>\n        <Button onClick={onSubmitComment}>Submit Comment</Button>\n        <Link to=\"/comments\">View Comments</Link>\n      </div>\n      <CommentsList comments={commentList} onDelete={deleteComment} onUpdate={updateCommentContent} />\n      <div>\n        <Form.Control\n          type=\"file\"\n          onChange={(e) => setFileUpload(e.target.files[0])}\n        />\n        <Button onClick={uploadProfilePhoto}>Upload Profile Photo</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}