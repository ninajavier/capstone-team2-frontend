{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from './Components/Navbar';\nimport \"./App.css\";\nimport { Auth } from \"./Components/Auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport { getDocs, collection, addDoc, deleteDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { Button, Form, InputGroup, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [commentList, setCommentList] = useState([]);\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(null);\n  const commentsCollectionRef = collection(db, \"comments\");\n  useEffect(() => {\n    const fetchCommentList = async () => {\n      try {\n        const data = await getDocs(commentsCollectionRef);\n        const filteredData = data.docs.map(doc => ({\n          ...doc.data(),\n          id: doc.id\n        }));\n        setCommentList(filteredData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchCommentList();\n  }, []);\n  const onSubmitComment = async () => {\n    const user = auth.currentUser;\n    if (user) {\n      const userId = user.uid;\n      try {\n        if (newCommentContent.trim() === \"\") {\n          console.error(\"Comment content is empty.\");\n          return;\n        }\n        await addDoc(commentsCollectionRef, {\n          text: newCommentContent,\n          userId: userId,\n          threadId: \"YourThreadId\",\n          // replace with actual thread ID \n          likes: 0,\n          timestamp: new Date()\n        });\n        setCommentList(prevCommentList => [...prevCommentList, {\n          text: newCommentContent,\n          userId: userId,\n          threadId: \"YourThreadId\",\n          // replace with actual thread ID\n          likes: 0,\n          timestamp: new Date()\n        }]);\n        setNewCommentContent(\"\");\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      console.error(\"User is not authenticated.\");\n    }\n  };\n  const deleteComment = async id => {\n    const commentDoc = doc(db, \"comments\", id);\n    await deleteDoc(commentDoc);\n    setCommentList(prevCommentList => prevCommentList.filter(comment => comment.id !== id));\n  };\n  const updateCommentContent = async id => {\n    const commentDoc = doc(db, \"comments\", id);\n    try {\n      await updateDoc(commentDoc, {\n        text: newCommentContent\n      });\n      setCommentList(prevCommentList => prevCommentList.map(comment => comment.id === id ? {\n        ...comment,\n        text: newCommentContent\n      } : comment));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const uploadProfilePhoto = async () => {\n    if (!fileUpload) return;\n    const user = auth.currentUser;\n    if (user) {\n      const userId = user.uid;\n      const photoRef = ref(storage, `profilePhotos/${userId}`);\n      try {\n        await uploadBytes(photoRef, fileUpload);\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      console.error(\"User is not authenticated.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Comment content...\",\n          value: newCommentContent,\n          onChange: e => setNewCommentContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmitComment,\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/comments\",\n        children: \"View Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: commentList.map(comment => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Likes: \", comment.likes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => deleteComment(comment.id),\n            children: \"Delete Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Update comment...\",\n              value: newCommentContent,\n              onChange: e => setNewCommentContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => updateCommentContent(comment.id),\n              children: \"Update Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: e => setFileUpload(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: uploadProfilePhoto,\n        children: \"Upload Profile Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hrz6tXyNPcUf9E2Wy/6co0OOuMo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Auth","db","auth","storage","getDocs","collection","addDoc","deleteDoc","updateDoc","doc","ref","uploadBytes","Button","Form","InputGroup","Card","Link","jsxDEV","_jsxDEV","App","_s","commentList","setCommentList","newCommentContent","setNewCommentContent","fileUpload","setFileUpload","commentsCollectionRef","fetchCommentList","data","filteredData","docs","map","id","err","console","error","onSubmitComment","user","currentUser","userId","uid","trim","text","threadId","likes","timestamp","Date","prevCommentList","deleteComment","commentDoc","filter","comment","updateCommentContent","uploadProfilePhoto","photoRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","value","onChange","e","target","onClick","to","Body","Title","Text","type","files","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Navbar from './Components/Navbar';\nimport \"./App.css\";\nimport { Auth } from \"./Components/Auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport {\n  getDocs,\n  collection,\n  addDoc,\n  deleteDoc,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { Button, Form, InputGroup, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  const [commentList, setCommentList] = useState([]);\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(null);\n\n  const commentsCollectionRef = collection(db, \"comments\");\n\n  useEffect(() => {\n    const fetchCommentList = async () => {\n      try {\n        const data = await getDocs(commentsCollectionRef);\n        const filteredData = data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }));\n        setCommentList(filteredData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchCommentList();\n  }, []);\n\n  const onSubmitComment = async () => {\n    const user = auth.currentUser;\n\n    if (user) {\n      const userId = user.uid;\n      try {\n        if (newCommentContent.trim() === \"\") {\n          console.error(\"Comment content is empty.\");\n          return;\n        }\n\n        await addDoc(commentsCollectionRef, {\n          text: newCommentContent,\n          userId: userId,\n          threadId: \"YourThreadId\",  // replace with actual thread ID \n          likes: 0,\n          timestamp: new Date()\n        });\n\n        setCommentList((prevCommentList) => [\n          ...prevCommentList,\n          {\n            text: newCommentContent,\n            userId: userId,\n            threadId: \"YourThreadId\",  // replace with actual thread ID\n            likes: 0,\n            timestamp: new Date()\n          },\n        ]);\n        setNewCommentContent(\"\");\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      console.error(\"User is not authenticated.\");\n    }\n  };\n\n  const deleteComment = async (id) => {\n    const commentDoc = doc(db, \"comments\", id);\n    await deleteDoc(commentDoc);\n    setCommentList((prevCommentList) =>\n      prevCommentList.filter((comment) => comment.id !== id)\n    );\n  };\n\n  const updateCommentContent = async (id) => {\n    const commentDoc = doc(db, \"comments\", id);\n    try {\n      await updateDoc(commentDoc, { text: newCommentContent });\n      setCommentList((prevCommentList) =>\n        prevCommentList.map((comment) =>\n          comment.id === id\n            ? { ...comment, text: newCommentContent }\n            : comment\n        )\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const uploadProfilePhoto = async () => {\n    if (!fileUpload) return;\n    const user = auth.currentUser;\n    if (user) {\n      const userId = user.uid;\n      const photoRef = ref(storage, `profilePhotos/${userId}`);\n      try {\n        await uploadBytes(photoRef, fileUpload);\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      console.error(\"User is not authenticated.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Auth />\n      <div>\n        <InputGroup className=\"mb-3\">\n          <Form.Control\n            placeholder=\"Comment content...\"\n            value={newCommentContent}\n            onChange={(e) => setNewCommentContent(e.target.value)}\n          />\n        </InputGroup>\n        <Button onClick={onSubmitComment}>Submit Comment</Button>\n        <Link to=\"/comments\">View Comments</Link>\n      </div>\n      <div>\n        {commentList.map((comment) => (\n          <Card key={comment.id}>\n            <Card.Body>\n              <Card.Title>{comment.text}</Card.Title>\n              <Card.Text>Likes: {comment.likes}</Card.Text>\n              <Button onClick={() => deleteComment(comment.id)}>Delete Comment</Button>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  placeholder=\"Update comment...\"\n                  value={newCommentContent}\n                  onChange={(e) => setNewCommentContent(e.target.value)}\n                />\n                <Button onClick={() => updateCommentContent(comment.id)}>Update Comment</Button>\n              </InputGroup>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n      <div>\n        <Form.Control\n          type=\"file\"\n          onChange={(e) => setFileUpload(e.target.files[0])}\n        />\n        <Button onClick={uploadProfilePhoto}>Upload Profile Photo</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}