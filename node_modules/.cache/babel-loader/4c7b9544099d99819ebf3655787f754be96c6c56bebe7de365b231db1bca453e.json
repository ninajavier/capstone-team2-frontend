{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Auth from \"./Components/Auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport { getDocs, collection, addDoc, deleteDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { Button, Form, InputGroup, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [commentList, setCommentList] = useState([]);\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const [isNewCommentImportant, setIsNewCommentImportant] = useState(false);\n  const [updatedCommentContent, setUpdatedCommentContent] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(null);\n  const commentsCollectionRef = collection(db, \"comments\");\n  const getCommentList = async () => {\n    try {\n      const data = await getDocs(commentsCollectionRef);\n      const filteredData = data.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setCommentList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    getCommentList();\n  });\n  const onSubmitComment = async () => {\n    try {\n      var _auth$currentUser;\n      await addDoc(commentsCollectionRef, {\n        content: newCommentContent,\n        important: isNewCommentImportant,\n        userId: auth === null || auth === void 0 ? void 0 : (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid\n      });\n      getCommentList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const deleteComment = async id => {\n    const commentDoc = doc(db, \"comments\", id);\n    await deleteDoc(commentDoc);\n    getCommentList();\n  };\n  const updateCommentContent = async id => {\n    const commentDoc = doc(db, \"comments\", id);\n    await updateDoc(commentDoc, {\n      content: updatedCommentContent\n    });\n    getCommentList();\n  };\n  const uploadFile = async () => {\n    if (!fileUpload) return;\n    const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`);\n    try {\n      await uploadBytes(filesFolderRef, fileUpload);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Comment content...\",\n          onChange: e => setNewCommentContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n          checked: isNewCommentImportant,\n          onChange: e => setIsNewCommentImportant(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          children: \"Important\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmitComment,\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: commentList.map(comment => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: comment.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => deleteComment(comment.id),\n            children: \"Delete Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"New content...\",\n              onChange: e => setUpdatedCommentContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => updateCommentContent(comment.id),\n              children: \"Update Comment Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: e => setFileUpload(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: uploadFile,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tpoEMBKtOGQR+6Bs5Cgfbrd5frw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Auth","db","auth","storage","getDocs","collection","addDoc","deleteDoc","updateDoc","doc","ref","uploadBytes","Button","Form","InputGroup","Card","jsxDEV","_jsxDEV","App","_s","commentList","setCommentList","newCommentContent","setNewCommentContent","isNewCommentImportant","setIsNewCommentImportant","updatedCommentContent","setUpdatedCommentContent","fileUpload","setFileUpload","commentsCollectionRef","getCommentList","data","filteredData","docs","map","id","err","console","error","onSubmitComment","_auth$currentUser","content","important","userId","currentUser","uid","deleteComment","commentDoc","updateCommentContent","uploadFile","filesFolderRef","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","onChange","e","target","value","Checkbox","checked","Text","onClick","comment","Body","Title","title","type","files","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Auth from \"./Components/Auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport {\n  getDocs,\n  collection,\n  addDoc,\n  deleteDoc,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { Button, Form, InputGroup, Card } from \"react-bootstrap\";\n\nfunction App() {\n  const [commentList, setCommentList] = useState([]);\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const [isNewCommentImportant, setIsNewCommentImportant] = useState(false);\n  const [updatedCommentContent, setUpdatedCommentContent] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(null);\n\n  const commentsCollectionRef = collection(db, \"comments\");\n\n  const getCommentList = async () => {\n    try {\n      const data = await getDocs(commentsCollectionRef);\n      const filteredData = data.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setCommentList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getCommentList();\n  }, );\n\n  const onSubmitComment = async () => {\n    try {\n      await addDoc(commentsCollectionRef, {\n        content: newCommentContent,\n        important: isNewCommentImportant,\n        userId: auth?.currentUser?.uid,\n      });\n      getCommentList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deleteComment = async (id) => {\n    const commentDoc = doc(db, \"comments\", id);\n    await deleteDoc(commentDoc);\n    getCommentList();\n  };\n\n  const updateCommentContent = async (id) => {\n    const commentDoc = doc(db, \"comments\", id);\n    await updateDoc(commentDoc, { content: updatedCommentContent });\n    getCommentList();\n  };\n\n  const uploadFile = async () => {\n    if (!fileUpload) return;\n    const filesFolderRef = ref(\n      storage,\n      `projectFiles/${fileUpload.name}`\n    );\n    try {\n      await uploadBytes(filesFolderRef, fileUpload);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Auth />\n\n      <div>\n        <InputGroup className=\"mb-3\">\n          <Form.Control\n            placeholder=\"Comment content...\"\n            onChange={(e) => setNewCommentContent(e.target.value)}\n          />\n          <InputGroup.Checkbox\n            checked={isNewCommentImportant}\n            onChange={(e) => setIsNewCommentImportant(e.target.checked)}\n          />\n          <InputGroup.Text>Important</InputGroup.Text>\n        </InputGroup>\n        <Button onClick={onSubmitComment}>Submit Comment</Button>\n      </div>\n      <div>\n        {commentList.map((comment) => (\n          <Card key={comment.id}>\n            <Card.Body>\n              <Card.Title>\n                {comment.title}\n              </Card.Title>\n              <Card.Text>\n                {comment.content}\n              </Card.Text>\n              <Button onClick={() => deleteComment(comment.id)}>\n                Delete Comment\n              </Button>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  placeholder=\"New content...\"\n                  onChange={(e) => setUpdatedCommentContent(e.target.value)}\n                />\n                <Button onClick={() => updateCommentContent(comment.id)}>\n                  Update Comment Content\n                </Button>\n              </InputGroup>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n      <div>\n        <Form.Control\n          type=\"file\"\n          onChange={(e) => setFileUpload(e.target.files[0])}\n        />\n        <Button onClick={uploadFile}>Upload File</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}