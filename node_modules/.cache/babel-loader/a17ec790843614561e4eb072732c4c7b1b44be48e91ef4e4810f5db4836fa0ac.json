{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/src/Providers/UserProvider.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserProvider = props => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    //listen for changes\n    auth.onAuthStateChanged(async user => {\n      console.log(user);\n      if (user) {\n        // get return values from Firebase\n        const {\n          email,\n          displayName,\n          photoURL,\n          uid\n        } = user;\n        // save them in state\n        setUser({\n          email,\n          displayName,\n          photoURL,\n          uid\n        });\n      } else {\n        setUser(null);\n      }\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // render context provider with user state in value\n    _jsxDEV(UserContext.Provider, {\n      value: user,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["UserProvider","props","_s","user","setUser","useState","useEffect","auth","onAuthStateChanged","console","log","email","displayName","photoURL","uid","_jsxDEV","UserContext","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/src/Providers/UserProvider.js"],"sourcesContent":["export const UserProvider = (props) => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    //listen for changes\n    auth.onAuthStateChanged(async (user) => {\n      console.log(user);\n      if (user) {\n        // get return values from Firebase\n        const { email, displayName, photoURL, uid } = user;\n        // save them in state\n        setUser({ email, displayName, photoURL, uid });\n      } else {\n        setUser(null);\n      }\n    });\n  }, []);\n  return (\n    // render context provider with user state in value\n    <UserContext.Provider value={user}>\n      <div>{props.children}</div>\n    </UserContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAO,MAAMA,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACtCC,SAAS,CAAC,MAAM;IACd;IACAC,IAAI,CAACC,kBAAkB,CAAC,MAAOL,IAAI,IAAK;MACtCM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;MACjB,IAAIA,IAAI,EAAE;QACR;QACA,MAAM;UAAEQ,KAAK;UAAEC,WAAW;UAAEC,QAAQ;UAAEC;QAAI,CAAC,GAAGX,IAAI;QAClD;QACAC,OAAO,CAAC;UAAEO,KAAK;UAAEC,WAAW;UAAEC,QAAQ;UAAEC;QAAI,CAAC,CAAC;MAChD,CAAC,MAAM;QACLV,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;IAAA;IACE;IACAW,OAAA,CAACC,WAAW,CAACC,QAAQ;MAACC,KAAK,EAAEf,IAAK;MAAAgB,QAAA,eAChCJ,OAAA;QAAAI,QAAA,EAAMlB,KAAK,CAACkB;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;AAE3B,CAAC;AAACrB,EAAA,CAtBWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}