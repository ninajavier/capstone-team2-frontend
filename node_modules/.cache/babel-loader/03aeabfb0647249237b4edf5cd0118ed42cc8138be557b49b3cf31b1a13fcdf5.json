{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/Components/Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../config/firebase';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchCommentsAndThreads = async () => {\n      const commentsSnapshot = await getDocs(collection(db, 'comments'));\n      const fetchedComments = [];\n      for (let doc of commentsSnapshot.docs) {\n        const commentData = doc.data();\n        const threadsSnapshot = await getDocs(query(collection(db, 'threads'), where('commentId', '==', doc.id)));\n        commentData.threads = threadsSnapshot.docs.map(threadDoc => threadDoc.data());\n        fetchedComments.push(commentData);\n      }\n      setComments(fetchedComments);\n    };\n    fetchCommentsAndThreads();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Let's Display Progrades Below!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: comment.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), comment.threads.map((thread, tIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thread.title\n      }, tIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","query","where","jsxDEV","_jsxDEV","Comments","_s","comments","setComments","fetchCommentsAndThreads","commentsSnapshot","fetchedComments","doc","docs","commentData","data","threadsSnapshot","id","threads","map","threadDoc","push","children","fileName","_jsxFileName","lineNumber","columnNumber","comment","index","text","thread","tIndex","title","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/Components/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../config/firebase';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\n\nconst Comments = () => {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    const fetchCommentsAndThreads = async () => {\n      const commentsSnapshot = await getDocs(collection(db, 'comments'));\n      const fetchedComments = [];\n\n      for (let doc of commentsSnapshot.docs) {\n        const commentData = doc.data();\n        \n        const threadsSnapshot = await getDocs(query(collection(db, 'threads'), where('commentId', '==', doc.id)));\n        commentData.threads = threadsSnapshot.docs.map(threadDoc => threadDoc.data());\n        \n        fetchedComments.push(commentData);\n      }\n\n      setComments(fetchedComments);\n    };\n\n    fetchCommentsAndThreads();\n  }, []);\n\n  return (\n    <div>\n      <h3>Let's Display Progrades Below!</h3>\n      {comments.map((comment, index) => (\n        <div key={index}>\n          <h2>{comment.text}</h2>\n          {comment.threads.map((thread, tIndex) => (\n            <p key={tIndex}>{thread.title}</p>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Comments;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMa,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,MAAMC,gBAAgB,GAAG,MAAMV,OAAO,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,CAAC;MAClE,MAAMa,eAAe,GAAG,EAAE;MAE1B,KAAK,IAAIC,GAAG,IAAIF,gBAAgB,CAACG,IAAI,EAAE;QACrC,MAAMC,WAAW,GAAGF,GAAG,CAACG,IAAI,CAAC,CAAC;QAE9B,MAAMC,eAAe,GAAG,MAAMhB,OAAO,CAACC,KAAK,CAACF,UAAU,CAACD,EAAE,EAAE,SAAS,CAAC,EAAEI,KAAK,CAAC,WAAW,EAAE,IAAI,EAAEU,GAAG,CAACK,EAAE,CAAC,CAAC,CAAC;QACzGH,WAAW,CAACI,OAAO,GAAGF,eAAe,CAACH,IAAI,CAACM,GAAG,CAACC,SAAS,IAAIA,SAAS,CAACL,IAAI,CAAC,CAAC,CAAC;QAE7EJ,eAAe,CAACU,IAAI,CAACP,WAAW,CAAC;MACnC;MAEAN,WAAW,CAACG,eAAe,CAAC;IAC9B,CAAC;IAEDF,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtCnB,QAAQ,CAACY,GAAG,CAAC,CAACQ,OAAO,EAAEC,KAAK,kBAC3BxB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAKK,OAAO,CAACE;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACtBC,OAAO,CAACT,OAAO,CAACC,GAAG,CAAC,CAACW,MAAM,EAAEC,MAAM,kBAClC3B,OAAA;QAAAkB,QAAA,EAAiBQ,MAAM,CAACE;MAAK,GAArBD,MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAClC,CAAC;IAAA,GAJME,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAApB,EAAA,CApCKD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}