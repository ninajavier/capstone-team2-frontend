{"ast":null,"code":"var _jsxFileName = \"/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/Components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\nimport { useAuth } from '../Contexts/AuthProvider';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction isStrongPassword(password) {\n  // Minimum 6 characters, at least one uppercase letter, one lowercase letter, one number, and one special character\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n  return passwordRegex.test(password);\n}\nconst Login = () => {\n  _s();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    login\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Get the navigate function from React Router\n  const navigate = useNavigate();\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    // Check if passwords match\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n    try {\n      // Validate the password strength before attempting to log in\n      if (!isStrongPassword(passwordRef.current.value)) {\n        setError('Password is too weak. It should meet strength requirements.');\n        setLoading(false);\n        return;\n      }\n      await login(emailRef.current.value, passwordRef.current.value);\n      // Use navigate to change the route on successful login\n      navigate('/dashboard'); // Change to your desired route\n    } catch {\n      setError('Failed to log in');\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Log In to Prograde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Need a Prograde Account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"ozU2Mxq0bbPjyhQgm5PEoxFHlG4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","Card","Button","Form","Alert","useAuth","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","isStrongPassword","password","passwordRegex","test","Login","_s","emailRef","passwordRef","passwordConfirmRef","login","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","current","value","children","Body","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","id","Label","Control","type","ref","required","disabled","to","_c","$RefreshReg$"],"sources":["/Users/cephusinpursuit/Desktop/capstone-team2-frontend/prograde/src/Components/Login.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\nimport { useAuth } from '../Contexts/AuthProvider';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction isStrongPassword(password) {\n  // Minimum 6 characters, at least one uppercase letter, one lowercase letter, one number, and one special character\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n  return passwordRegex.test(password);\n}\n\nconst Login = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Get the navigate function from React Router\n  const navigate = useNavigate();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    setError('');\n    setLoading(true);\n\n    // Check if passwords match\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Validate the password strength before attempting to log in\n      if (!isStrongPassword(passwordRef.current.value)) {\n        setError('Password is too weak. It should meet strength requirements.');\n        setLoading(false);\n        return;\n      }\n\n      await login(emailRef.current.value, passwordRef.current.value);\n      // Use navigate to change the route on successful login\n      navigate('/dashboard'); // Change to your desired route\n    } catch {\n      setError('Failed to log in');\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In to Prograde</h2>\n\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email:</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password:</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation:</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need a Prograde Account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}